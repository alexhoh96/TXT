4. Создать внешний репозиторий с названием JSON. 
5. Клонировать репозиторий JSON на локальный компьютер. - git clone https://github.com/alexhoh96/JSON.git
6. Внутри контекста JSON создайте файл «new.json». cd JSON
                                                   touch new.json
7. Добавить файл под гит. git add new.json
8. Закоммитить файл. - git commit -m "new commit"
9. Отправить файл на внешний репозиторий GitHub. - git push
10. Отредактировать содержание файла «new.json» - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
cat >> new.json
{
"name": "Хохлов Аексей Леонидович",
"age": 26,
"pets":0,
"future salary": 50000
}
ctrl + C
11. Отправить изменения на внешний репозиторий. 
git add new.json
git commit -m "new commit 2"
git push
12. Создайте файл 
touch preferences.json
13. В файле preferences.json добавьте информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона, которую вы хотели бы посетить) в формате JSON. 
cat >> preferences.json
{
"favorite movie": "Гарри Поттер",
"favorite TV show": "нет одного самого любимого",
"favorite food":"шашлык",
"favorite time of year": "summer"
}
ctrl + C
git add preferences.json
git commit -m "new commit 3"
14. Создайте файл sklls.json. Добавьте информацию об инструментах, которые будут изучены в соответствии с форматом JSON 
cat > sklls.json
{
"sklls": "Теория тестирования, SQL, Postman, Git"
}
ctrl + C
git add sklls.json
git commit -m "new commit 4"
15. Отправить сразу 2 файла на внешний репозиторий. 
git push
16. На веб-интерфейсе создайте файл bug_report.json. Add file, create new file
17. Сделать Зафиксировать изменения (сохранить) изменения на веб-интерфейсе - commit changes
18. На веб-интерфейсе измените файл bug_report.json, добавьте отчет об ошибках в формате JSON. 
{
"ID":""
"Заголовок":""
"Шаги воспроизведения":""
 "Ожидаемый результат":""
 "Фактический результат":""
 "Окружение":""
 "Приоритет":""
} 
19. Сделать фиксацию изменений (сохранить) изменения на веб-интерфейсе. - commit changes
20. Синхронизировать внешний и локальный репозиторий JSON - git pull
